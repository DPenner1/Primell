//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/darrell/Projects/Primell/PrimellLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class PrimellLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		INFINITY=1, RTL=2, LTR=3, CONCAT=4, ASSIGN=5, L_BRACK=6, R_BRACK=7, L_PAREN=8, 
		R_PAREN=9, VERT_BAR=10, DOT=11, TAIL=12, PLUS=13, STAR=14, NEGATE=15, 
		F_SLASH=16, B_SLASH=17, D_QUOTE=18, OPMOD_POW=19, OPMOD_CUT=20, OP_NULLARY=21, 
		OP_UNARY=22, OP_USER_UNARY=23, OP_BINARY=24, OP_USER_BINARY=25, OP_COND=26, 
		WS=27, INT_OR_ID=28, COMMENT=29, STRING=30, InStr_D_QUOTE=31;
	public const int
		IN_STR=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "IN_STR"
	};

	public static readonly string[] ruleNames = {
		"INFINITY", "RTL", "LTR", "CONCAT", "ASSIGN", "L_BRACK", "R_BRACK", "L_PAREN", 
		"R_PAREN", "VERT_BAR", "DOT", "TAIL", "PLUS", "STAR", "NEGATE", "F_SLASH", 
		"B_SLASH", "D_QUOTE", "OPMOD_POW", "OPMOD_CUT", "OP_NULLARY", "OP_UNARY", 
		"OP_USER_UNARY", "OP_BINARY", "OP_USER_BINARY", "OP_COND", "WS", "INT_OR_ID", 
		"INT_OR_ID_CHAR", "COMMENT", "STRING", "InStr_D_QUOTE"
	};


	public PrimellLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PrimellLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'\\u221E'", "'$'", "'\\u20AC'", "';'", "'='", "'['", "']'", "'('", 
		"')'", "'|'", "'.'", "'>'", "'+'", "'*'", "'~'", "'/'", "'\\'", null, 
		"'^'", "'`'", null, null, null, null, null, "'?'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INFINITY", "RTL", "LTR", "CONCAT", "ASSIGN", "L_BRACK", "R_BRACK", 
		"L_PAREN", "R_PAREN", "VERT_BAR", "DOT", "TAIL", "PLUS", "STAR", "NEGATE", 
		"F_SLASH", "B_SLASH", "D_QUOTE", "OPMOD_POW", "OPMOD_CUT", "OP_NULLARY", 
		"OP_UNARY", "OP_USER_UNARY", "OP_BINARY", "OP_USER_BINARY", "OP_COND", 
		"WS", "INT_OR_ID", "COMMENT", "STRING", "InStr_D_QUOTE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PrimellLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static PrimellLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,31,270,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
		6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,
		2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,
		2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,
		2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,
		3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,
		1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,17,
		1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,20,3,20,114,8,20,1,21,1,21,1,
		21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
		21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
		21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
		21,3,21,161,8,21,1,22,1,22,1,22,1,22,3,22,167,8,22,1,23,1,23,1,23,1,23,
		1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
		1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
		1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
		1,23,3,23,216,8,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
		24,1,24,1,24,1,24,1,24,1,24,3,24,234,8,24,1,25,1,25,1,26,4,26,239,8,26,
		11,26,12,26,240,1,26,1,26,1,27,4,27,246,8,27,11,27,12,27,247,1,28,1,28,
		1,29,1,29,1,29,1,29,5,29,256,8,29,10,29,12,29,259,9,29,1,30,4,30,262,8,
		30,11,30,12,30,263,1,31,1,31,1,31,1,31,1,31,0,0,32,2,1,4,2,6,3,8,4,10,
		5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,26,13,28,14,30,15,32,16,34,17,
		36,18,38,19,40,20,42,21,44,22,46,23,48,24,50,25,52,26,54,27,56,28,58,0,
		60,29,62,30,64,31,2,0,1,5,2,0,37,37,45,45,3,0,9,10,13,13,32,32,6,0,44,
		44,48,57,65,90,97,122,222,222,254,254,1,0,0,65535,2,0,0,31,34,34,314,0,
		2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,
		0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,
		1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,
		0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,
		1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,
		0,0,60,1,0,0,0,1,62,1,0,0,0,1,64,1,0,0,0,2,66,1,0,0,0,4,68,1,0,0,0,6,70,
		1,0,0,0,8,72,1,0,0,0,10,74,1,0,0,0,12,76,1,0,0,0,14,78,1,0,0,0,16,80,1,
		0,0,0,18,82,1,0,0,0,20,84,1,0,0,0,22,86,1,0,0,0,24,88,1,0,0,0,26,90,1,
		0,0,0,28,92,1,0,0,0,30,94,1,0,0,0,32,96,1,0,0,0,34,98,1,0,0,0,36,100,1,
		0,0,0,38,105,1,0,0,0,40,107,1,0,0,0,42,113,1,0,0,0,44,160,1,0,0,0,46,166,
		1,0,0,0,48,215,1,0,0,0,50,233,1,0,0,0,52,235,1,0,0,0,54,238,1,0,0,0,56,
		245,1,0,0,0,58,249,1,0,0,0,60,251,1,0,0,0,62,261,1,0,0,0,64,265,1,0,0,
		0,66,67,5,8734,0,0,67,3,1,0,0,0,68,69,5,36,0,0,69,5,1,0,0,0,70,71,5,8364,
		0,0,71,7,1,0,0,0,72,73,5,59,0,0,73,9,1,0,0,0,74,75,5,61,0,0,75,11,1,0,
		0,0,76,77,5,91,0,0,77,13,1,0,0,0,78,79,5,93,0,0,79,15,1,0,0,0,80,81,5,
		40,0,0,81,17,1,0,0,0,82,83,5,41,0,0,83,19,1,0,0,0,84,85,5,124,0,0,85,21,
		1,0,0,0,86,87,5,46,0,0,87,23,1,0,0,0,88,89,5,62,0,0,89,25,1,0,0,0,90,91,
		5,43,0,0,91,27,1,0,0,0,92,93,5,42,0,0,93,29,1,0,0,0,94,95,5,126,0,0,95,
		31,1,0,0,0,96,97,5,47,0,0,97,33,1,0,0,0,98,99,5,92,0,0,99,35,1,0,0,0,100,
		101,5,34,0,0,101,102,1,0,0,0,102,103,6,17,0,0,103,104,6,17,1,0,104,37,
		1,0,0,0,105,106,5,94,0,0,106,39,1,0,0,0,107,108,5,96,0,0,108,41,1,0,0,
		0,109,110,5,58,0,0,110,114,5,34,0,0,111,112,5,58,0,0,112,114,5,44,0,0,
		113,109,1,0,0,0,113,111,1,0,0,0,114,43,1,0,0,0,115,116,5,95,0,0,116,161,
		5,58,0,0,117,118,5,95,0,0,118,161,5,60,0,0,119,120,5,95,0,0,120,161,5,
		62,0,0,121,122,5,95,0,0,122,161,5,42,0,0,123,124,5,95,0,0,124,161,5,95,
		0,0,125,126,5,95,0,0,126,161,5,63,0,0,127,128,5,95,0,0,128,161,5,126,0,
		0,129,130,5,95,0,0,130,161,5,64,0,0,131,132,5,58,0,0,132,133,5,62,0,0,
		133,161,5,34,0,0,134,135,5,58,0,0,135,136,5,62,0,0,136,161,5,44,0,0,137,
		138,5,58,0,0,138,139,5,62,0,0,139,161,5,95,0,0,140,141,5,58,0,0,141,142,
		5,64,0,0,142,161,5,34,0,0,143,144,5,58,0,0,144,145,5,64,0,0,145,161,5,
		44,0,0,146,147,5,43,0,0,147,161,5,43,0,0,148,149,5,45,0,0,149,161,5,45,
		0,0,150,151,5,43,0,0,151,161,5,45,0,0,152,153,5,96,0,0,153,161,5,126,0,
		0,154,155,5,33,0,0,155,161,5,124,0,0,156,157,5,33,0,0,157,161,5,92,0,0,
		158,159,5,33,0,0,159,161,5,47,0,0,160,115,1,0,0,0,160,117,1,0,0,0,160,
		119,1,0,0,0,160,121,1,0,0,0,160,123,1,0,0,0,160,125,1,0,0,0,160,127,1,
		0,0,0,160,129,1,0,0,0,160,131,1,0,0,0,160,134,1,0,0,0,160,137,1,0,0,0,
		160,140,1,0,0,0,160,143,1,0,0,0,160,146,1,0,0,0,160,148,1,0,0,0,160,150,
		1,0,0,0,160,152,1,0,0,0,160,154,1,0,0,0,160,156,1,0,0,0,160,158,1,0,0,
		0,161,45,1,0,0,0,162,163,5,95,0,0,163,167,3,56,27,0,164,165,5,35,0,0,165,
		167,3,56,27,0,166,162,1,0,0,0,166,164,1,0,0,0,167,47,1,0,0,0,168,216,7,
		0,0,0,169,170,5,42,0,0,170,216,5,42,0,0,171,172,5,47,0,0,172,216,5,47,
		0,0,173,216,5,8230,0,0,174,175,5,46,0,0,175,216,5,46,0,0,176,216,5,60,
		0,0,177,178,5,96,0,0,178,216,5,38,0,0,179,180,5,96,0,0,180,216,5,124,0,
		0,181,182,5,96,0,0,182,216,5,94,0,0,183,184,5,60,0,0,184,185,5,58,0,0,
		185,186,5,58,0,0,186,216,5,62,0,0,187,188,5,42,0,0,188,216,5,63,0,0,189,
		190,5,42,0,0,190,191,5,63,0,0,191,216,5,126,0,0,192,216,5,38,0,0,193,194,
		5,58,0,0,194,195,5,64,0,0,195,216,5,95,0,0,196,197,5,58,0,0,197,198,5,
		64,0,0,198,199,5,62,0,0,199,216,5,95,0,0,200,201,5,58,0,0,201,202,5,64,
		0,0,202,203,5,62,0,0,203,216,5,34,0,0,204,205,5,58,0,0,205,206,5,64,0,
		0,206,207,5,62,0,0,207,216,5,44,0,0,208,216,5,64,0,0,209,210,5,58,0,0,
		210,211,5,58,0,0,211,216,5,62,0,0,212,213,5,60,0,0,213,214,5,58,0,0,214,
		216,5,58,0,0,215,168,1,0,0,0,215,169,1,0,0,0,215,171,1,0,0,0,215,173,1,
		0,0,0,215,174,1,0,0,0,215,176,1,0,0,0,215,177,1,0,0,0,215,179,1,0,0,0,
		215,181,1,0,0,0,215,183,1,0,0,0,215,187,1,0,0,0,215,189,1,0,0,0,215,192,
		1,0,0,0,215,193,1,0,0,0,215,196,1,0,0,0,215,200,1,0,0,0,215,204,1,0,0,
		0,215,208,1,0,0,0,215,209,1,0,0,0,215,212,1,0,0,0,216,49,1,0,0,0,217,218,
		5,95,0,0,218,219,3,56,27,0,219,220,5,95,0,0,220,234,1,0,0,0,221,222,5,
		95,0,0,222,223,3,56,27,0,223,224,5,35,0,0,224,234,1,0,0,0,225,226,5,35,
		0,0,226,227,3,56,27,0,227,228,5,95,0,0,228,234,1,0,0,0,229,230,5,35,0,
		0,230,231,3,56,27,0,231,232,5,35,0,0,232,234,1,0,0,0,233,217,1,0,0,0,233,
		221,1,0,0,0,233,225,1,0,0,0,233,229,1,0,0,0,234,51,1,0,0,0,235,236,5,63,
		0,0,236,53,1,0,0,0,237,239,7,1,0,0,238,237,1,0,0,0,239,240,1,0,0,0,240,
		238,1,0,0,0,240,241,1,0,0,0,241,242,1,0,0,0,242,243,6,26,2,0,243,55,1,
		0,0,0,244,246,3,58,28,0,245,244,1,0,0,0,246,247,1,0,0,0,247,245,1,0,0,
		0,247,248,1,0,0,0,248,57,1,0,0,0,249,250,7,2,0,0,250,59,1,0,0,0,251,252,
		5,126,0,0,252,253,5,126,0,0,253,257,1,0,0,0,254,256,7,3,0,0,255,254,1,
		0,0,0,256,259,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,61,1,0,0,0,259,
		257,1,0,0,0,260,262,8,4,0,0,261,260,1,0,0,0,262,263,1,0,0,0,263,261,1,
		0,0,0,263,264,1,0,0,0,264,63,1,0,0,0,265,266,5,34,0,0,266,267,1,0,0,0,
		267,268,6,31,0,0,268,269,6,31,3,0,269,65,1,0,0,0,11,0,1,113,160,166,215,
		233,240,247,257,263,4,6,0,0,5,1,0,0,1,0,4,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
