//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/darrell/Projects/Primell/Antlr4Generation/PrimellLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class PrimellLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		INFINITY=1, RTL=2, LTR=3, CONCAT=4, ASSIGN=5, L_BRACK=6, R_BRACK=7, L_PAREN=8, 
		R_PAREN=9, VERT_BAR=10, DOT=11, TAIL=12, PLUS=13, STAR=14, NEGATE=15, 
		F_SLASH=16, B_SLASH=17, OUT_INV=18, OUT_DEF=19, OUT_STR=20, OPMOD_POW=21, 
		OPMOD_CUT=22, OP_NULLARY=23, OP_UNARY=24, OP_USER_UNARY=25, OP_BINARY=26, 
		OP_USER_BINARY=27, OP_COND=28, WS=29, INT_OR_ID=30, COMMENT=31;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INFINITY", "RTL", "LTR", "CONCAT", "ASSIGN", "L_BRACK", "R_BRACK", "L_PAREN", 
		"R_PAREN", "VERT_BAR", "DOT", "TAIL", "PLUS", "STAR", "NEGATE", "F_SLASH", 
		"B_SLASH", "OUT_INV", "OUT_DEF", "OUT_STR", "OPMOD_POW", "OPMOD_CUT", 
		"OP_NULLARY", "OP_UNARY", "OP_USER_UNARY", "OP_BINARY", "OP_USER_BINARY", 
		"OP_COND", "WS", "INT_OR_ID", "INT_OR_ID_CHAR", "COMMENT"
	};


	public PrimellLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PrimellLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'\\u221E'", "'$'", "'\\u20AC'", "';'", "'='", "'['", "']'", "'('", 
		"')'", "'|'", "'.'", "'>'", "'+'", "'*'", "'~'", "'/'", "'\\'", "'\"~'", 
		"'\"\"'", "'\"'", "'^'", "'`'", null, null, null, null, null, "'?'", null, 
		null, "'~~'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INFINITY", "RTL", "LTR", "CONCAT", "ASSIGN", "L_BRACK", "R_BRACK", 
		"L_PAREN", "R_PAREN", "VERT_BAR", "DOT", "TAIL", "PLUS", "STAR", "NEGATE", 
		"F_SLASH", "B_SLASH", "OUT_INV", "OUT_DEF", "OUT_STR", "OPMOD_POW", "OPMOD_CUT", 
		"OP_NULLARY", "OP_UNARY", "OP_USER_UNARY", "OP_BINARY", "OP_USER_BINARY", 
		"OP_COND", "WS", "INT_OR_ID", "COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PrimellLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static PrimellLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,31,219,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,
		1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,
		12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,
		18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,22,3,22,116,8,22,1,23,
		1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
		1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,3,23,142,8,23,1,24,1,24,1,
		24,1,24,3,24,148,8,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
		1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
		1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,181,8,25,1,26,1,26,1,26,1,26,1,
		26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,199,8,26,
		1,27,1,27,1,28,4,28,204,8,28,11,28,12,28,205,1,28,1,28,1,29,4,29,211,8,
		29,11,29,12,29,212,1,30,1,30,1,31,1,31,1,31,0,0,32,1,1,3,2,5,3,7,4,9,5,
		11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
		18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
		30,61,0,63,31,1,0,4,2,0,37,37,45,45,2,0,38,38,64,64,3,0,9,10,13,13,32,
		32,6,0,44,44,48,57,65,90,97,122,222,222,254,254,249,0,1,1,0,0,0,0,3,1,
		0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
		15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
		0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
		0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
		1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
		0,0,59,1,0,0,0,0,63,1,0,0,0,1,65,1,0,0,0,3,67,1,0,0,0,5,69,1,0,0,0,7,71,
		1,0,0,0,9,73,1,0,0,0,11,75,1,0,0,0,13,77,1,0,0,0,15,79,1,0,0,0,17,81,1,
		0,0,0,19,83,1,0,0,0,21,85,1,0,0,0,23,87,1,0,0,0,25,89,1,0,0,0,27,91,1,
		0,0,0,29,93,1,0,0,0,31,95,1,0,0,0,33,97,1,0,0,0,35,99,1,0,0,0,37,102,1,
		0,0,0,39,105,1,0,0,0,41,107,1,0,0,0,43,109,1,0,0,0,45,115,1,0,0,0,47,141,
		1,0,0,0,49,147,1,0,0,0,51,180,1,0,0,0,53,198,1,0,0,0,55,200,1,0,0,0,57,
		203,1,0,0,0,59,210,1,0,0,0,61,214,1,0,0,0,63,216,1,0,0,0,65,66,5,8734,
		0,0,66,2,1,0,0,0,67,68,5,36,0,0,68,4,1,0,0,0,69,70,5,8364,0,0,70,6,1,0,
		0,0,71,72,5,59,0,0,72,8,1,0,0,0,73,74,5,61,0,0,74,10,1,0,0,0,75,76,5,91,
		0,0,76,12,1,0,0,0,77,78,5,93,0,0,78,14,1,0,0,0,79,80,5,40,0,0,80,16,1,
		0,0,0,81,82,5,41,0,0,82,18,1,0,0,0,83,84,5,124,0,0,84,20,1,0,0,0,85,86,
		5,46,0,0,86,22,1,0,0,0,87,88,5,62,0,0,88,24,1,0,0,0,89,90,5,43,0,0,90,
		26,1,0,0,0,91,92,5,42,0,0,92,28,1,0,0,0,93,94,5,126,0,0,94,30,1,0,0,0,
		95,96,5,47,0,0,96,32,1,0,0,0,97,98,5,92,0,0,98,34,1,0,0,0,99,100,5,34,
		0,0,100,101,5,126,0,0,101,36,1,0,0,0,102,103,5,34,0,0,103,104,5,34,0,0,
		104,38,1,0,0,0,105,106,5,34,0,0,106,40,1,0,0,0,107,108,5,94,0,0,108,42,
		1,0,0,0,109,110,5,96,0,0,110,44,1,0,0,0,111,112,5,58,0,0,112,116,5,34,
		0,0,113,114,5,58,0,0,114,116,5,44,0,0,115,111,1,0,0,0,115,113,1,0,0,0,
		116,46,1,0,0,0,117,118,5,95,0,0,118,142,5,58,0,0,119,120,5,95,0,0,120,
		142,5,60,0,0,121,122,5,95,0,0,122,142,5,62,0,0,123,124,5,95,0,0,124,142,
		5,42,0,0,125,126,5,95,0,0,126,142,5,95,0,0,127,128,5,95,0,0,128,142,5,
		63,0,0,129,130,5,95,0,0,130,142,5,126,0,0,131,132,5,95,0,0,132,142,5,64,
		0,0,133,134,5,43,0,0,134,142,5,43,0,0,135,136,5,45,0,0,136,142,5,45,0,
		0,137,138,5,43,0,0,138,142,5,45,0,0,139,140,5,96,0,0,140,142,5,126,0,0,
		141,117,1,0,0,0,141,119,1,0,0,0,141,121,1,0,0,0,141,123,1,0,0,0,141,125,
		1,0,0,0,141,127,1,0,0,0,141,129,1,0,0,0,141,131,1,0,0,0,141,133,1,0,0,
		0,141,135,1,0,0,0,141,137,1,0,0,0,141,139,1,0,0,0,142,48,1,0,0,0,143,144,
		5,95,0,0,144,148,3,59,29,0,145,146,5,35,0,0,146,148,3,59,29,0,147,143,
		1,0,0,0,147,145,1,0,0,0,148,50,1,0,0,0,149,181,7,0,0,0,150,151,5,42,0,
		0,151,181,5,42,0,0,152,153,5,47,0,0,153,181,5,47,0,0,154,181,5,8230,0,
		0,155,156,5,46,0,0,156,181,5,46,0,0,157,181,5,60,0,0,158,159,5,96,0,0,
		159,181,5,38,0,0,160,161,5,96,0,0,161,181,5,124,0,0,162,163,5,96,0,0,163,
		181,5,94,0,0,164,165,5,60,0,0,165,166,5,58,0,0,166,167,5,58,0,0,167,181,
		5,62,0,0,168,169,5,42,0,0,169,181,5,63,0,0,170,171,5,42,0,0,171,172,5,
		63,0,0,172,181,5,126,0,0,173,181,7,1,0,0,174,175,5,58,0,0,175,176,5,58,
		0,0,176,181,5,62,0,0,177,178,5,60,0,0,178,179,5,58,0,0,179,181,5,58,0,
		0,180,149,1,0,0,0,180,150,1,0,0,0,180,152,1,0,0,0,180,154,1,0,0,0,180,
		155,1,0,0,0,180,157,1,0,0,0,180,158,1,0,0,0,180,160,1,0,0,0,180,162,1,
		0,0,0,180,164,1,0,0,0,180,168,1,0,0,0,180,170,1,0,0,0,180,173,1,0,0,0,
		180,174,1,0,0,0,180,177,1,0,0,0,181,52,1,0,0,0,182,183,5,95,0,0,183,184,
		3,59,29,0,184,185,5,95,0,0,185,199,1,0,0,0,186,187,5,95,0,0,187,188,3,
		59,29,0,188,189,5,35,0,0,189,199,1,0,0,0,190,191,5,35,0,0,191,192,3,59,
		29,0,192,193,5,95,0,0,193,199,1,0,0,0,194,195,5,35,0,0,195,196,3,59,29,
		0,196,197,5,35,0,0,197,199,1,0,0,0,198,182,1,0,0,0,198,186,1,0,0,0,198,
		190,1,0,0,0,198,194,1,0,0,0,199,54,1,0,0,0,200,201,5,63,0,0,201,56,1,0,
		0,0,202,204,7,2,0,0,203,202,1,0,0,0,204,205,1,0,0,0,205,203,1,0,0,0,205,
		206,1,0,0,0,206,207,1,0,0,0,207,208,6,28,0,0,208,58,1,0,0,0,209,211,3,
		61,30,0,210,209,1,0,0,0,211,212,1,0,0,0,212,210,1,0,0,0,212,213,1,0,0,
		0,213,60,1,0,0,0,214,215,7,3,0,0,215,62,1,0,0,0,216,217,5,126,0,0,217,
		218,5,126,0,0,218,64,1,0,0,0,8,0,115,141,147,180,198,205,212,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
