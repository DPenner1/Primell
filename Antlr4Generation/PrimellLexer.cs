//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/darrell/Projects/Primell/PrimellLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class PrimellLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		INFINITY=1, RTL=2, LTR=3, CONCAT=4, ASSIGN=5, L_BRACK=6, R_BRACK=7, L_PAREN=8, 
		R_PAREN=9, VERT_BAR=10, DOT=11, TAIL=12, PLUS=13, STAR=14, NEGATE=15, 
		F_SLASH=16, B_SLASH=17, BRANCH_F=18, BRANCH_B=19, BRANCH_A=20, D_QUOTE=21, 
		OPMOD_POW=22, OPMOD_CUT=23, OP_NULLARY=24, OP_UNARY=25, OP_USER_UNARY=26, 
		OP_BINARY=27, OP_USER_BINARY=28, OP_COND=29, WS=30, INT_OR_ID=31, COMMENT=32, 
		STRING=33, InStr_D_QUOTE=34;
	public const int
		IN_STR=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "IN_STR"
	};

	public static readonly string[] ruleNames = {
		"INFINITY", "RTL", "LTR", "CONCAT", "ASSIGN", "L_BRACK", "R_BRACK", "L_PAREN", 
		"R_PAREN", "VERT_BAR", "DOT", "TAIL", "PLUS", "STAR", "NEGATE", "F_SLASH", 
		"B_SLASH", "BRANCH_F", "BRANCH_B", "BRANCH_A", "D_QUOTE", "OPMOD_POW", 
		"OPMOD_CUT", "OP_NULLARY", "OP_UNARY", "OP_USER_UNARY", "OP_BINARY", "OP_USER_BINARY", 
		"OP_COND", "WS", "INT_OR_ID", "INT_OR_ID_CHAR", "COMMENT", "STRING", "InStr_D_QUOTE"
	};


	public PrimellLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PrimellLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'\\u221E'", "'$'", "'\\u20AC'", "';'", "'='", "'['", "']'", "'('", 
		"')'", "'|'", "'.'", "'>'", "'+'", "'*'", "'~'", "'/'", "'\\'", "'!/'", 
		"'!\\'", "'!|'", null, "'^'", "'`'", null, null, null, null, null, "'?'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INFINITY", "RTL", "LTR", "CONCAT", "ASSIGN", "L_BRACK", "R_BRACK", 
		"L_PAREN", "R_PAREN", "VERT_BAR", "DOT", "TAIL", "PLUS", "STAR", "NEGATE", 
		"F_SLASH", "B_SLASH", "BRANCH_F", "BRANCH_B", "BRANCH_A", "D_QUOTE", "OPMOD_POW", 
		"OPMOD_CUT", "OP_NULLARY", "OP_UNARY", "OP_USER_UNARY", "OP_BINARY", "OP_USER_BINARY", 
		"OP_COND", "WS", "INT_OR_ID", "COMMENT", "STRING", "InStr_D_QUOTE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PrimellLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static PrimellLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,34,279,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
		6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,
		2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,
		2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,
		2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,
		1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,
		8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,
		1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,
		1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,3,23,129,8,23,1,24,1,
		24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
		24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,
		24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,3,24,170,8,24,1,25,1,25,
		1,25,1,25,3,25,176,8,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
		26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
		26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,
		26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,3,26,225,8,26,1,27,1,27,
		1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,
		3,27,243,8,27,1,28,1,28,1,29,4,29,248,8,29,11,29,12,29,249,1,29,1,29,1,
		30,4,30,255,8,30,11,30,12,30,256,1,31,1,31,1,32,1,32,1,32,1,32,5,32,265,
		8,32,10,32,12,32,268,9,32,1,33,4,33,271,8,33,11,33,12,33,272,1,34,1,34,
		1,34,1,34,1,34,0,0,35,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,
		11,24,12,26,13,28,14,30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,
		23,48,24,50,25,52,26,54,27,56,28,58,29,60,30,62,31,64,0,66,32,68,33,70,
		34,2,0,1,5,2,0,37,37,45,45,3,0,9,10,13,13,32,32,6,0,44,44,48,57,65,90,
		97,122,222,222,254,254,1,0,0,65535,2,0,0,31,34,34,320,0,2,1,0,0,0,0,4,
		1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,
		0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,
		1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,
		0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,
		1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,
		0,0,60,1,0,0,0,0,62,1,0,0,0,0,66,1,0,0,0,1,68,1,0,0,0,1,70,1,0,0,0,2,72,
		1,0,0,0,4,74,1,0,0,0,6,76,1,0,0,0,8,78,1,0,0,0,10,80,1,0,0,0,12,82,1,0,
		0,0,14,84,1,0,0,0,16,86,1,0,0,0,18,88,1,0,0,0,20,90,1,0,0,0,22,92,1,0,
		0,0,24,94,1,0,0,0,26,96,1,0,0,0,28,98,1,0,0,0,30,100,1,0,0,0,32,102,1,
		0,0,0,34,104,1,0,0,0,36,106,1,0,0,0,38,109,1,0,0,0,40,112,1,0,0,0,42,115,
		1,0,0,0,44,120,1,0,0,0,46,122,1,0,0,0,48,128,1,0,0,0,50,169,1,0,0,0,52,
		175,1,0,0,0,54,224,1,0,0,0,56,242,1,0,0,0,58,244,1,0,0,0,60,247,1,0,0,
		0,62,254,1,0,0,0,64,258,1,0,0,0,66,260,1,0,0,0,68,270,1,0,0,0,70,274,1,
		0,0,0,72,73,5,8734,0,0,73,3,1,0,0,0,74,75,5,36,0,0,75,5,1,0,0,0,76,77,
		5,8364,0,0,77,7,1,0,0,0,78,79,5,59,0,0,79,9,1,0,0,0,80,81,5,61,0,0,81,
		11,1,0,0,0,82,83,5,91,0,0,83,13,1,0,0,0,84,85,5,93,0,0,85,15,1,0,0,0,86,
		87,5,40,0,0,87,17,1,0,0,0,88,89,5,41,0,0,89,19,1,0,0,0,90,91,5,124,0,0,
		91,21,1,0,0,0,92,93,5,46,0,0,93,23,1,0,0,0,94,95,5,62,0,0,95,25,1,0,0,
		0,96,97,5,43,0,0,97,27,1,0,0,0,98,99,5,42,0,0,99,29,1,0,0,0,100,101,5,
		126,0,0,101,31,1,0,0,0,102,103,5,47,0,0,103,33,1,0,0,0,104,105,5,92,0,
		0,105,35,1,0,0,0,106,107,5,33,0,0,107,108,5,47,0,0,108,37,1,0,0,0,109,
		110,5,33,0,0,110,111,5,92,0,0,111,39,1,0,0,0,112,113,5,33,0,0,113,114,
		5,124,0,0,114,41,1,0,0,0,115,116,5,34,0,0,116,117,1,0,0,0,117,118,6,20,
		0,0,118,119,6,20,1,0,119,43,1,0,0,0,120,121,5,94,0,0,121,45,1,0,0,0,122,
		123,5,96,0,0,123,47,1,0,0,0,124,125,5,58,0,0,125,129,5,34,0,0,126,127,
		5,58,0,0,127,129,5,44,0,0,128,124,1,0,0,0,128,126,1,0,0,0,129,49,1,0,0,
		0,130,131,5,95,0,0,131,170,5,58,0,0,132,133,5,95,0,0,133,170,5,60,0,0,
		134,135,5,95,0,0,135,170,5,62,0,0,136,137,5,95,0,0,137,170,5,42,0,0,138,
		139,5,95,0,0,139,170,5,95,0,0,140,141,5,95,0,0,141,170,5,63,0,0,142,143,
		5,95,0,0,143,170,5,126,0,0,144,145,5,95,0,0,145,170,5,64,0,0,146,147,5,
		58,0,0,147,148,5,62,0,0,148,170,5,34,0,0,149,150,5,58,0,0,150,151,5,62,
		0,0,151,170,5,44,0,0,152,153,5,58,0,0,153,154,5,62,0,0,154,170,5,95,0,
		0,155,156,5,58,0,0,156,157,5,64,0,0,157,170,5,34,0,0,158,159,5,58,0,0,
		159,160,5,64,0,0,160,170,5,44,0,0,161,162,5,43,0,0,162,170,5,43,0,0,163,
		164,5,45,0,0,164,170,5,45,0,0,165,166,5,43,0,0,166,170,5,45,0,0,167,168,
		5,96,0,0,168,170,5,126,0,0,169,130,1,0,0,0,169,132,1,0,0,0,169,134,1,0,
		0,0,169,136,1,0,0,0,169,138,1,0,0,0,169,140,1,0,0,0,169,142,1,0,0,0,169,
		144,1,0,0,0,169,146,1,0,0,0,169,149,1,0,0,0,169,152,1,0,0,0,169,155,1,
		0,0,0,169,158,1,0,0,0,169,161,1,0,0,0,169,163,1,0,0,0,169,165,1,0,0,0,
		169,167,1,0,0,0,170,51,1,0,0,0,171,172,5,95,0,0,172,176,3,62,30,0,173,
		174,5,35,0,0,174,176,3,62,30,0,175,171,1,0,0,0,175,173,1,0,0,0,176,53,
		1,0,0,0,177,225,7,0,0,0,178,179,5,42,0,0,179,225,5,42,0,0,180,181,5,47,
		0,0,181,225,5,47,0,0,182,225,5,8230,0,0,183,184,5,46,0,0,184,225,5,46,
		0,0,185,225,5,60,0,0,186,187,5,96,0,0,187,225,5,38,0,0,188,189,5,96,0,
		0,189,225,5,124,0,0,190,191,5,96,0,0,191,225,5,94,0,0,192,193,5,60,0,0,
		193,194,5,58,0,0,194,195,5,58,0,0,195,225,5,62,0,0,196,197,5,42,0,0,197,
		225,5,63,0,0,198,199,5,42,0,0,199,200,5,63,0,0,200,225,5,126,0,0,201,225,
		5,38,0,0,202,203,5,58,0,0,203,204,5,64,0,0,204,225,5,95,0,0,205,206,5,
		58,0,0,206,207,5,64,0,0,207,208,5,62,0,0,208,225,5,95,0,0,209,210,5,58,
		0,0,210,211,5,64,0,0,211,212,5,62,0,0,212,225,5,34,0,0,213,214,5,58,0,
		0,214,215,5,64,0,0,215,216,5,62,0,0,216,225,5,44,0,0,217,225,5,64,0,0,
		218,219,5,58,0,0,219,220,5,58,0,0,220,225,5,62,0,0,221,222,5,60,0,0,222,
		223,5,58,0,0,223,225,5,58,0,0,224,177,1,0,0,0,224,178,1,0,0,0,224,180,
		1,0,0,0,224,182,1,0,0,0,224,183,1,0,0,0,224,185,1,0,0,0,224,186,1,0,0,
		0,224,188,1,0,0,0,224,190,1,0,0,0,224,192,1,0,0,0,224,196,1,0,0,0,224,
		198,1,0,0,0,224,201,1,0,0,0,224,202,1,0,0,0,224,205,1,0,0,0,224,209,1,
		0,0,0,224,213,1,0,0,0,224,217,1,0,0,0,224,218,1,0,0,0,224,221,1,0,0,0,
		225,55,1,0,0,0,226,227,5,95,0,0,227,228,3,62,30,0,228,229,5,95,0,0,229,
		243,1,0,0,0,230,231,5,95,0,0,231,232,3,62,30,0,232,233,5,35,0,0,233,243,
		1,0,0,0,234,235,5,35,0,0,235,236,3,62,30,0,236,237,5,95,0,0,237,243,1,
		0,0,0,238,239,5,35,0,0,239,240,3,62,30,0,240,241,5,35,0,0,241,243,1,0,
		0,0,242,226,1,0,0,0,242,230,1,0,0,0,242,234,1,0,0,0,242,238,1,0,0,0,243,
		57,1,0,0,0,244,245,5,63,0,0,245,59,1,0,0,0,246,248,7,1,0,0,247,246,1,0,
		0,0,248,249,1,0,0,0,249,247,1,0,0,0,249,250,1,0,0,0,250,251,1,0,0,0,251,
		252,6,29,2,0,252,61,1,0,0,0,253,255,3,64,31,0,254,253,1,0,0,0,255,256,
		1,0,0,0,256,254,1,0,0,0,256,257,1,0,0,0,257,63,1,0,0,0,258,259,7,2,0,0,
		259,65,1,0,0,0,260,261,5,126,0,0,261,262,5,126,0,0,262,266,1,0,0,0,263,
		265,7,3,0,0,264,263,1,0,0,0,265,268,1,0,0,0,266,264,1,0,0,0,266,267,1,
		0,0,0,267,67,1,0,0,0,268,266,1,0,0,0,269,271,8,4,0,0,270,269,1,0,0,0,271,
		272,1,0,0,0,272,270,1,0,0,0,272,273,1,0,0,0,273,69,1,0,0,0,274,275,5,34,
		0,0,275,276,1,0,0,0,276,277,6,34,0,0,277,278,6,34,3,0,278,71,1,0,0,0,11,
		0,1,128,169,175,224,242,249,256,266,272,4,6,0,0,5,1,0,0,1,0,4,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
