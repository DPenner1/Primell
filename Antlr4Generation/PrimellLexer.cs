//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/darrell/Projects/Primell/PrimellLexer.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class PrimellLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		INFINITY=1, RTL=2, LTR=3, S_COLON=4, ASSIGN=5, L_BRACK=6, R_BRACK=7, L_PAREN=8, 
		R_PAREN=9, VERT_BAR=10, DOT=11, TAIL=12, PLUS=13, STAR=14, NEGATE=15, 
		F_SLASH=16, B_SLASH=17, D_QUOTE=18, OPMOD_POW=19, OPMOD_TRUNCATE=20, OPMOD_UNFOLD=21, 
		OP_NULLARY=22, OP_UNARY=23, OP_USER_UNARY=24, OP_BINARY=25, OP_USER_BINARY=26, 
		OP_COND=27, WS=28, INT_OR_ID=29, COMMENT=30, STRING=31, InStr_D_QUOTE=32;
	public const int
		IN_STR=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "IN_STR"
	};

	public static readonly string[] ruleNames = {
		"INFINITY", "RTL", "LTR", "S_COLON", "ASSIGN", "L_BRACK", "R_BRACK", "L_PAREN", 
		"R_PAREN", "VERT_BAR", "DOT", "TAIL", "PLUS", "STAR", "NEGATE", "F_SLASH", 
		"B_SLASH", "D_QUOTE", "OPMOD_POW", "OPMOD_TRUNCATE", "OPMOD_UNFOLD", "OP_NULLARY", 
		"OP_UNARY", "OP_USER_UNARY", "OP_BINARY", "OP_USER_BINARY", "OP_COND", 
		"WS", "INT_OR_ID", "INT_OR_ID_CHAR", "COMMENT", "STRING", "InStr_D_QUOTE"
	};


	public PrimellLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public PrimellLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'\\u221E'", "'$'", "'\\u20AC'", "';'", "'='", "'['", "']'", "'('", 
		"')'", "'|'", "'.'", "'>'", "'+'", "'*'", "'~'", "'/'", "'\\'", null, 
		"'^'", "'`'", "':'", null, null, null, null, null, "'?'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INFINITY", "RTL", "LTR", "S_COLON", "ASSIGN", "L_BRACK", "R_BRACK", 
		"L_PAREN", "R_PAREN", "VERT_BAR", "DOT", "TAIL", "PLUS", "STAR", "NEGATE", 
		"F_SLASH", "B_SLASH", "D_QUOTE", "OPMOD_POW", "OPMOD_TRUNCATE", "OPMOD_UNFOLD", 
		"OP_NULLARY", "OP_UNARY", "OP_USER_UNARY", "OP_BINARY", "OP_USER_BINARY", 
		"OP_COND", "WS", "INT_OR_ID", "COMMENT", "STRING", "InStr_D_QUOTE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "PrimellLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static PrimellLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,32,261,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
		6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,
		2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,
		2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,
		2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,1,0,1,0,1,1,1,1,1,2,
		1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
		1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,
		1,17,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,21,3,21,
		118,8,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
		22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
		22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
		22,1,22,3,22,162,8,22,1,23,1,23,1,23,1,23,3,23,168,8,23,1,24,1,24,1,24,
		1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
		1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
		1,24,1,24,1,24,1,24,1,24,1,24,3,24,207,8,24,1,25,1,25,1,25,1,25,1,25,1,
		25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,3,25,225,8,25,1,26,
		1,26,1,27,4,27,230,8,27,11,27,12,27,231,1,27,1,27,1,28,4,28,237,8,28,11,
		28,12,28,238,1,29,1,29,1,30,1,30,1,30,1,30,5,30,247,8,30,10,30,12,30,250,
		9,30,1,31,4,31,253,8,31,11,31,12,31,254,1,32,1,32,1,32,1,32,1,32,0,0,33,
		2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,26,13,28,14,
		30,15,32,16,34,17,36,18,38,19,40,20,42,21,44,22,46,23,48,24,50,25,52,26,
		54,27,56,28,58,29,60,0,62,30,64,31,66,32,2,0,1,5,2,0,37,37,45,45,3,0,9,
		10,13,13,32,32,6,0,44,44,48,57,65,90,97,122,222,222,254,254,1,0,0,65535,
		2,0,0,31,34,34,304,0,2,1,0,0,0,0,4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,
		1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,
		0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,
		1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,
		0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,
		1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,62,1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,
		0,2,68,1,0,0,0,4,70,1,0,0,0,6,72,1,0,0,0,8,74,1,0,0,0,10,76,1,0,0,0,12,
		78,1,0,0,0,14,80,1,0,0,0,16,82,1,0,0,0,18,84,1,0,0,0,20,86,1,0,0,0,22,
		88,1,0,0,0,24,90,1,0,0,0,26,92,1,0,0,0,28,94,1,0,0,0,30,96,1,0,0,0,32,
		98,1,0,0,0,34,100,1,0,0,0,36,102,1,0,0,0,38,107,1,0,0,0,40,109,1,0,0,0,
		42,111,1,0,0,0,44,117,1,0,0,0,46,161,1,0,0,0,48,167,1,0,0,0,50,206,1,0,
		0,0,52,224,1,0,0,0,54,226,1,0,0,0,56,229,1,0,0,0,58,236,1,0,0,0,60,240,
		1,0,0,0,62,242,1,0,0,0,64,252,1,0,0,0,66,256,1,0,0,0,68,69,5,8734,0,0,
		69,3,1,0,0,0,70,71,5,36,0,0,71,5,1,0,0,0,72,73,5,8364,0,0,73,7,1,0,0,0,
		74,75,5,59,0,0,75,9,1,0,0,0,76,77,5,61,0,0,77,11,1,0,0,0,78,79,5,91,0,
		0,79,13,1,0,0,0,80,81,5,93,0,0,81,15,1,0,0,0,82,83,5,40,0,0,83,17,1,0,
		0,0,84,85,5,41,0,0,85,19,1,0,0,0,86,87,5,124,0,0,87,21,1,0,0,0,88,89,5,
		46,0,0,89,23,1,0,0,0,90,91,5,62,0,0,91,25,1,0,0,0,92,93,5,43,0,0,93,27,
		1,0,0,0,94,95,5,42,0,0,95,29,1,0,0,0,96,97,5,126,0,0,97,31,1,0,0,0,98,
		99,5,47,0,0,99,33,1,0,0,0,100,101,5,92,0,0,101,35,1,0,0,0,102,103,5,34,
		0,0,103,104,1,0,0,0,104,105,6,17,0,0,105,106,6,17,1,0,106,37,1,0,0,0,107,
		108,5,94,0,0,108,39,1,0,0,0,109,110,5,96,0,0,110,41,1,0,0,0,111,112,5,
		58,0,0,112,43,1,0,0,0,113,114,5,60,0,0,114,118,5,95,0,0,115,116,5,60,0,
		0,116,118,5,34,0,0,117,113,1,0,0,0,117,115,1,0,0,0,118,45,1,0,0,0,119,
		120,5,95,0,0,120,162,5,58,0,0,121,122,5,95,0,0,122,162,5,60,0,0,123,124,
		5,95,0,0,124,162,5,62,0,0,125,126,5,95,0,0,126,162,5,42,0,0,127,128,5,
		95,0,0,128,162,5,95,0,0,129,130,5,95,0,0,130,162,5,63,0,0,131,132,5,95,
		0,0,132,162,5,126,0,0,133,134,5,95,0,0,134,162,5,64,0,0,135,136,5,62,0,
		0,136,162,5,34,0,0,137,138,5,62,0,0,138,162,5,95,0,0,139,140,5,95,0,0,
		140,162,5,35,0,0,141,142,5,43,0,0,142,162,5,43,0,0,143,144,5,45,0,0,144,
		162,5,45,0,0,145,146,5,43,0,0,146,162,5,45,0,0,147,148,5,96,0,0,148,162,
		5,126,0,0,149,150,5,33,0,0,150,162,5,124,0,0,151,152,5,33,0,0,152,162,
		5,92,0,0,153,154,5,33,0,0,154,162,5,47,0,0,155,156,5,47,0,0,156,162,5,
		35,0,0,157,158,5,47,0,0,158,162,5,42,0,0,159,160,5,42,0,0,160,162,5,126,
		0,0,161,119,1,0,0,0,161,121,1,0,0,0,161,123,1,0,0,0,161,125,1,0,0,0,161,
		127,1,0,0,0,161,129,1,0,0,0,161,131,1,0,0,0,161,133,1,0,0,0,161,135,1,
		0,0,0,161,137,1,0,0,0,161,139,1,0,0,0,161,141,1,0,0,0,161,143,1,0,0,0,
		161,145,1,0,0,0,161,147,1,0,0,0,161,149,1,0,0,0,161,151,1,0,0,0,161,153,
		1,0,0,0,161,155,1,0,0,0,161,157,1,0,0,0,161,159,1,0,0,0,162,47,1,0,0,0,
		163,164,5,95,0,0,164,168,3,58,28,0,165,166,5,35,0,0,166,168,3,58,28,0,
		167,163,1,0,0,0,167,165,1,0,0,0,168,49,1,0,0,0,169,207,7,0,0,0,170,171,
		5,42,0,0,171,207,5,42,0,0,172,173,5,47,0,0,173,207,5,47,0,0,174,207,5,
		8230,0,0,175,176,5,46,0,0,176,207,5,46,0,0,177,178,5,46,0,0,178,179,5,
		46,0,0,179,207,5,46,0,0,180,207,5,60,0,0,181,182,5,96,0,0,182,207,5,38,
		0,0,183,184,5,96,0,0,184,207,5,124,0,0,185,186,5,96,0,0,186,207,5,94,0,
		0,187,188,5,60,0,0,188,189,5,58,0,0,189,190,5,58,0,0,190,207,5,62,0,0,
		191,192,5,42,0,0,192,207,5,63,0,0,193,194,5,42,0,0,194,195,5,63,0,0,195,
		207,5,126,0,0,196,207,5,38,0,0,197,198,5,64,0,0,198,207,5,95,0,0,199,207,
		5,64,0,0,200,201,5,58,0,0,201,202,5,58,0,0,202,207,5,62,0,0,203,204,5,
		60,0,0,204,205,5,58,0,0,205,207,5,58,0,0,206,169,1,0,0,0,206,170,1,0,0,
		0,206,172,1,0,0,0,206,174,1,0,0,0,206,175,1,0,0,0,206,177,1,0,0,0,206,
		180,1,0,0,0,206,181,1,0,0,0,206,183,1,0,0,0,206,185,1,0,0,0,206,187,1,
		0,0,0,206,191,1,0,0,0,206,193,1,0,0,0,206,196,1,0,0,0,206,197,1,0,0,0,
		206,199,1,0,0,0,206,200,1,0,0,0,206,203,1,0,0,0,207,51,1,0,0,0,208,209,
		5,95,0,0,209,210,3,58,28,0,210,211,5,95,0,0,211,225,1,0,0,0,212,213,5,
		95,0,0,213,214,3,58,28,0,214,215,5,35,0,0,215,225,1,0,0,0,216,217,5,35,
		0,0,217,218,3,58,28,0,218,219,5,95,0,0,219,225,1,0,0,0,220,221,5,35,0,
		0,221,222,3,58,28,0,222,223,5,35,0,0,223,225,1,0,0,0,224,208,1,0,0,0,224,
		212,1,0,0,0,224,216,1,0,0,0,224,220,1,0,0,0,225,53,1,0,0,0,226,227,5,63,
		0,0,227,55,1,0,0,0,228,230,7,1,0,0,229,228,1,0,0,0,230,231,1,0,0,0,231,
		229,1,0,0,0,231,232,1,0,0,0,232,233,1,0,0,0,233,234,6,27,2,0,234,57,1,
		0,0,0,235,237,3,60,29,0,236,235,1,0,0,0,237,238,1,0,0,0,238,236,1,0,0,
		0,238,239,1,0,0,0,239,59,1,0,0,0,240,241,7,2,0,0,241,61,1,0,0,0,242,243,
		5,126,0,0,243,244,5,126,0,0,244,248,1,0,0,0,245,247,7,3,0,0,246,245,1,
		0,0,0,247,250,1,0,0,0,248,246,1,0,0,0,248,249,1,0,0,0,249,63,1,0,0,0,250,
		248,1,0,0,0,251,253,8,4,0,0,252,251,1,0,0,0,253,254,1,0,0,0,254,252,1,
		0,0,0,254,255,1,0,0,0,255,65,1,0,0,0,256,257,5,34,0,0,257,258,1,0,0,0,
		258,259,6,32,0,0,259,260,6,32,3,0,260,67,1,0,0,0,11,0,1,117,161,167,206,
		224,231,238,248,254,4,6,0,0,5,1,0,0,1,0,4,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
